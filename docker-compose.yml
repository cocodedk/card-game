# No version field needed for newer Docker Compose

services:
  backend:
    build:
      context: ./backend
      dockerfile: ../docker/backend.Dockerfile
    volumes:
      - ./frontend:/app/frontend
      - ./backend:/app/backend
      - ./.cursor/rules:/app/.cursor/rules
    ports:
      - "8000:8000"
    environment:
      - DEBUG=True
      - SECRET_KEY=dev-secret-key-change-in-production
      - NEO4J_BOLT_URL=bolt://neo4j:password@neo4j:7687
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - CORS_ALLOWED_ORIGINS=http://localhost:3000
      - PYTHONUNBUFFERED=1
      - DJANGO_SETTINGS_MODULE=backend.card_game.settings
    depends_on:
      neo4j:
        condition: service_healthy
      redis:
        condition: service_healthy
    command: >
      sh -c "export DJANGO_SETTINGS_MODULE=backend.card_game.settings && export PYTHONPATH=/app && chmod +x /app/backend/configure_neo4j.py && watchmedo auto-restart --directory=./ --pattern=*.py --recursive -- /app/backend/configure_neo4j.py daphne -b 0.0.0.0 -p 8000 backend.card_game.asgi:application"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/api/"]
      interval: 30s
      timeout: 20s
      retries: 5
      start_period: 60s

  frontend:
    build:
      context: ./frontend
      dockerfile: ../docker/frontend.Dockerfile
    volumes:
      - shared_codebase:/shared_code
      - ./frontend:/app/frontend
      - ./backend:/app/backend
      - ./.cursor/rules:/app/.cursor/rules
      - /app/frontend/node_modules
    ports:
      - "3000:3000"
    environment:
      - NEXT_PUBLIC_API_URL=http://localhost:8000
    command: npm run dev
    depends_on:
      backend:
        condition: service_healthy

  neo4j:
    image: neo4j:5.16.0
    ports:
      - "7474:7474"
      - "7687:7687"
    environment:
      - NEO4J_AUTH=neo4j/password
      - NEO4J_dbms_memory_pagecache_size=1G
      - NEO4J_dbms.memory.heap.initial_size=1G
      - NEO4J_dbms_memory_heap_max__size=1G
    volumes:
      - neo4j_data:/data
      - neo4j_logs:/logs
    healthcheck:
      test: ["CMD", "wget", "-O", "/dev/null", "-q", "http://localhost:7474"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 60s

  redis:
    image: redis:7.2.4-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 20s

volumes:
  shared_codebase:
  neo4j_data:
  neo4j_logs:
  redis_data:
